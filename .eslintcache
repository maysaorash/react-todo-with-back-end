[{"C:\\Users\\maysa\\OneDrive\\Desktop\\react-todo\\react-todo\\src\\index.js":"1","C:\\Users\\maysa\\OneDrive\\Desktop\\react-todo\\react-todo\\src\\reportWebVitals.js":"2","C:\\Users\\maysa\\OneDrive\\Desktop\\react-todo\\react-todo\\src\\components\\TodoList.js":"3","C:\\Users\\maysa\\OneDrive\\Desktop\\react-todo\\react-todo\\src\\components\\TodoItems.js":"4","C:\\Users\\maysa\\OneDrive\\Desktop\\react-todo\\react-todo\\src\\App.js":"5"},{"size":519,"mtime":1609383974178,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":2772,"mtime":1610316481018,"results":"9","hashOfConfig":"7"},{"size":507,"mtime":1610316566562,"results":"10","hashOfConfig":"7"},{"size":166,"mtime":1609467808794,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1gse7ep",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\maysa\\OneDrive\\Desktop\\react-todo\\react-todo\\src\\index.js",[],["24","25"],"C:\\Users\\maysa\\OneDrive\\Desktop\\react-todo\\react-todo\\src\\reportWebVitals.js",[],"C:\\Users\\maysa\\OneDrive\\Desktop\\react-todo\\react-todo\\src\\components\\TodoList.js",["26","27"],"import React from 'react';\r\nimport TodoItems from './TodoItems';\r\n\r\nclass TodoList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tasks: [],\r\n      newTask: '',\r\n    }\r\n    this.handleInput = this.handleInput.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.removeItem = this.removeItem.bind(this);\r\n    this.editItems = this.editItems.bind(this);\r\n    \r\n  }\r\n\r\n  handleInput(e) {\r\n    this.setState({\r\n      newTask: e.target.value\r\n    })\r\n  }\r\n\r\n  handleClick(e) {\r\n    if(this.state.newTask.trim()){\r\n\r\n      fetch('http://localhost:8080/api/todoitems', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          title: this.state.newTask\r\n        }),\r\n        headers: {\r\n          'Content-type': 'application/json; charset=UTF-8',\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((json) => {\r\n          const newTasks = [...this.state.tasks, json] \r\n          this.setState({\r\n            tasks: newTasks\r\n          })\r\n        });\r\n      // Empty the newTask property in the state\r\n      this.setState({\r\n        newTask: ''\r\n      })\r\n    } else {\r\n      alert('Please enter a value')\r\n    }\r\n  }\r\n\r\n  removeItem(id) {\r\n    fetch('http://localhost:8080/api/todoitems/' + id, {\r\n      method: 'DELETE',\r\n    }).then(() => {\r\n      const filteredTasks = this.state.tasks.filter(task => {\r\n        return task.id !== id;\r\n      })\r\n      this.setState({\r\n        tasks: filteredTasks\r\n      })\r\n    });\r\n  }\r\n\r\n  editItems(id, value){\r\n    fetch('http://localhost:8080/api/todoitems/' + id, {\r\n        method: 'PUT',\r\n        body: JSON.stringify({\r\n          title: value\r\n        }),\r\n        headers: {\r\n          'Content-type': 'application/json; charset=UTF-8',\r\n        }\r\n    }).then(response => response.json())\r\n    .then(() => {\r\n      const tasks = this.state.tasks;\r\n      tasks.map(task => {\r\n        if( task.id == id){\r\n          task.title = value\r\n        }\r\n      })\r\n      this.setState({tasks: tasks})\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('http://localhost:8080/api/todoitems')\r\n    .then((response) => response.json())\r\n    .then((json) => this.setState({tasks: json}));\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.tasks)\r\n    return (\r\n      <div>\r\n        <form>\r\n          <input type=\"text\" onInput={this.handleInput} value={this.state.newTask}/>\r\n          <button type=\"button\" onClick={this.handleClick}>Add</button>\r\n        </form>\r\n        <ul>\r\n          <TodoItems editItems = {this.editItems} tasks={this.state.tasks} foo=\"bar\" removeItem={this.removeItem}/>\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(this.state)\r\n  }\r\n}\r\n\r\nexport default TodoList;","C:\\Users\\maysa\\OneDrive\\Desktop\\react-todo\\react-todo\\src\\components\\TodoItems.js",[],"C:\\Users\\maysa\\OneDrive\\Desktop\\react-todo\\react-todo\\src\\App.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":77,"column":22,"nodeType":"34","messageId":"35","endLine":77,"endColumn":24},{"ruleId":"36","severity":1,"message":"37","line":78,"column":21,"nodeType":"38","messageId":"39","endLine":78,"endColumn":23},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]